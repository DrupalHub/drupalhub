<?php
/**
 * @file
 * drupalhub_reputation.module
 */

/**
 * Implements hook_menu().
 */
function drupalhub_reputation_menu() {
  $items = array();

  $items['admin/config/drupalhub'] = array(
    'title' => 'DrupalHub',
    'description' => 'DrupalHub settings.',
    'position' => 'right',
    'weight' => -5,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('manage drupalhub settings'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/drupalhub/reputation'] = array(
    'title' => 'Manage reputation',
    'description' => 'Manage reputation settings',
    'access arguments' => array('manage drupalhub settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drupalhub_reputation_admin_settings'),
  );

  return $items;
}

/**
 * Setting the amount of points when a comment/node was updated.
 */
function drupalhub_reputation_admin_settings($form, $form_state) {
  $form['drupalhub_points_for_question_create'] = array(
    '#type' => 'textfield',
    '#title' => t('Set the number of points user get when posting for a question'),
    '#default_value' => variable_get('drupalhub_points_for_question_create', 1),
  );
  $form['drupalhub_points_for_comment_create'] = array(
    '#type' => 'textfield',
    '#title' => t('Set the number of points user get when commenting for a question'),
    '#default_value' => variable_get('drupalhub_points_for_comment_create', 1),
  );
  $form['drupalhub_points_for_vote_question'] = array(
    '#type' => 'textfield',
    '#title' => t('Set the number of points user get when voting for a question'),
    '#default_value' => variable_get('drupalhub_points_for_vote_question', 1),
  );



  // todo: Add amount of points for posting a question.
  // todo: Add amount of points for posting a comment.

  return system_settings_form($form);
}

/**
 * Adding or decreasing amount of the user point.
 *
 * @param $user
 *  The user object or ID.
 * @param $amount
 *  The number of points.
 */
function drupalhub_reputation_update_score($user, $amount) {
  $wrapper = entity_metadata_wrapper('user', $user);

  $current_point = $wrapper->field_reputation->value();
  $new_point = $current_point + $amount;
  $wrapper->field_reputation->set($new_point);
  $wrapper->save();
}

/**
 * Implements hook_votingapi_insert().
 */
function drupalhub_reputation_votingapi_insert($vote) { 
  global $user; //we have uid in $vote, not sure if any time, and why not usin $user->uid?
  if($user->uid)
    drupalhub_reputation_update_score($user->uid, variable_get('drupalhub_points_for_vote_question', 1));
}

/**
 * Implements hook_node_insert().
 */
function drupalhub_reputation_node_insert($node) {

 if($node->uid && $node->type == 'question')
     drupalhub_reputation_update_score($user->uid, variable_get('drupalhub_points_for_question_create', 1));
}

/**
 * Implements hook_comment insert().
 */
function drupalhub_reputation_comment_insert($comment) {
  global $user;
  if($user->uid)
    drupalhub_reputation_update_score($comment->uid, variable_get('drupalhub_points_for_comment_create', 1));
}

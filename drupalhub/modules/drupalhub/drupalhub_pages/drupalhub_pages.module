<?php
/**
 * @file
 * Code for the DrupalHub pages feature.
 */

include_once 'drupalhub_pages.features.inc';


/**
 * Implements hook_menu().
 */
function drupalhub_pages_menu() {
  $items = array();

  $items['service_provider'] = $items['service_provider/%'] = array(
    'page arguments' => array(1),
    'page callback' => 'drupalhub_pages_service_providers_search',
    'access callback' => TRUE,
  );


  $items['service_provider']['page arguments'] = array();

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function drupalhub_pages_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_node_load().
 *
 * When which an idea we need to add a CSS. This is temporary until we have a
 * custom theme.
 */
function drupalhub_pages_node_load($nodes, $types) {
  if (!in_array('idea', $types)) {
    return;
  }

  drupal_add_css(drupal_get_path('module', 'drupalhub_pages') . '/css/drupalhub_pages.css');
}

/**
 * Return an array of tagged terms.
 */
function drupalhub_pages_tagged_terms() {
  // ti stands for taxonomy index.
  $query = db_select('taxonomy_index', 'ti');

  // td stands for taxonomy data.
  $query->join('taxonomy_term_data', 'td', 'td.tid = ti.tid');

  return $query
    ->fields('td', array('tid'))
    ->execute()
    ->fetchAllAssoc('tid');
}

/**
 * Get the number of tagged nodes per term.
 */
function drupalhub_pages_count_tagged_entities($tid) {
  $query = db_select('taxonomy_index', 'ti');
  return $query
    ->fields('ti', array('tid'))
    ->condition('ti.tid', $tid)
    ->execute()
    ->rowCount();
}

/**
 * usort callback function; Order the terms by the number of tagged items.
 */
function drupalhub_pages_order_terms($a, $b) {
  return $a['tagged'] > $b['tagged'] ? -1 : 1;
}

/**
 * Helper function. Get list of nodes and build an html of service providers.
 *
 * @param $nodes
 *  The nodes object.
 *
 * @return array
 *  Array built in next form:
 *    - providers:  String. The html output for the carousel after all the
 *                  providers nodes rendered.
 *    - navigation: Boolean. Determine if we need to present navigation
 *                  controllers due to the carousel pager.
 */
function drupalhub_pages_services_providers($nodes) {
  $chunks = array_chunk($nodes, 12);
  $providers = '';

  $i = $j = 0;
  foreach ($chunks as $nodes) {

    $active = $i == 0 ? 'active' : '';
    $providers .= '<div class="item ' . $active . '">';
    $providers .= '<div class="row">';

    foreach ($nodes as $node) {

      $wrapper = entity_metadata_wrapper('node', $node);
      $file = $wrapper->field_group_logo->value();
      $params = array(
        'title' => l(views_trim_text(array('max_length' => 20, 'html' => TRUE, 'ellipsis' => TRUE), $node->title), 'node/' . $node->nid),
        'image' => theme('image_style', array('path' => $file['uri'], 'style_name' => 'thumbnail')),
      );
      $providers .= '<div class="col-xs-2">' . theme('service_provider', $params) . '</div>';
      $j++;

      // Each row need to have 10 providers. When the $j is smaller then 20
      // that's mean we didn't got to end of the provider in the current
      // carousel item.
      if ($j % 6 == 0) {
        $providers .= '</div><div class="row">';
      }
    }

    $providers .= '</div>';
    $providers .= '</div>';

    $i++;
  }

  $navigation = count($chunks) > 1;

  return array(
    'providers' => $providers,
    'navigation' => $navigation,
  );
}

/**
 * Provide a form for search the service providers. For now this will be done
 * via jquery and some AJAX.
 *
 * We could do that with some minor jquery but since we need to split the
 * providers to pages we need to do that with ajax callbacks.
 */
function service_provider_search($form, $form_state) {

  $form['search'] = array(
    '#type' => 'textfield',
    '#size' => 43,
    '#attributes' => array(
      'placeholder' => array(t('Search for service provider')),
      'class' => array('placeholder_search'),
    ),
  );

  return $form;
}

/**
 * Return output with the service providers which to wha the user searched for.
 */
function drupalhub_pages_service_providers_search($value = '') {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');

  if (!empty($value)) {
    $query->propertyCondition('title', $value, 'CONTAINS');
  }

  $results = $query->propertyCondition('type', 'drupalhub_group')
    ->execute();

  if (empty($results['node'])) {
    throw new Exception();
  }

  $result = drupalhub_pages_services_providers(node_load_multiple(array_keys($results['node'])));

  drupal_json_output(theme('service_providers', array('providers' => $result['providers'], 'navigation' => $result['navigation'])));
}